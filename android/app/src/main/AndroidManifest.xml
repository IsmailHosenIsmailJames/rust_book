<manifest xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- The INTERNET permission is required for development. Specifically,
         flutter needs it to communicate with the running application
         to allow setting breakpoints, to provide hot reload, etc.
    -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>

    <!-- io.flutter.app.FlutterApplication is an android.app.Application that
         calls FlutterMain.startInitialization(this); in its onCreate method.
         In most cases you can leave this as-is, but you if you want to provide
         additional functionality it is fine to subclass or reimplement
         FlutterApplication and put your custom class here. -->
    <application
        android:label="Rust Book"
        android:usesCleartextTraffic="true"
        android:icon="@mipmap/launcher_icon">
        <meta-data
            android:name="asset_statements"
            android:resource="@string/asset_statements" />

        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
<!--        <activity-->
<!--            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density"-->
<!--            android:exported="true"-->
<!--            android:hardwareAccelerated="true"-->
<!--            android:launchMode="singleTop"-->
<!--            android:name=".EmbedderV1Activity"-->
<!--            android:theme="@style/LaunchTheme"-->
<!--            android:windowSoftInputMode="adjustResize">-->
<!--            &lt;!&ndash; This keeps the window background of the activity showing-->
<!--                 until Flutter renders its first frame. It can be removed if-->
<!--                 there is no splash screen (such as the default splash screen-->
<!--                 defined in @style/LaunchTheme). &ndash;&gt;-->
<!--            <meta-data-->
<!--                android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"-->
<!--                android:value="true"/>-->
<!--        </activity>-->
        <activity
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:exported="true"
            android:name="io.flutter.embedding.android.FlutterActivity"
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustResize">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.flutter_inappwebview_android.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" />
        </provider>

        <provider
            android:name="vn.hunghd.flutterdownloader.DownloadedFileProvider"
            android:authorities="${applicationId}.flutter_downloader.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths"/>
        </provider>

        <!-- Hybrid composition -->
        <meta-data
            android:name="io.flutter.embedded_views_preview"
            android:value="true" />

        <service android:name="androidx.browser.customtabs.PostMessageService"
            android:exported="true"/>
    </application>
</manifest>
